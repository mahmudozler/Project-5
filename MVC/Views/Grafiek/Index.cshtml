@{ ViewData["Title"] = "Grafieken"; }
@model IEnumerable<MVC.Models.Product>

<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        // Load the Visualization API and the corechart package.
        google.charts.load('current', {
            'packages': ['corechart']
        });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('date', 'Maand');
            data.addColumn('number', 'Omzet (EUR)');

            @for(int i = 0; i < ViewBag.Data.Length; i++) {
                <text>
                    data.addRows([[new Date(@ViewBag.Data[i].Date.ToUniversalTime().Subtract(new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).TotalMilliseconds), @ViewBag.Data[i].Price]]);
                </text>
            }

            // Set chart options
            var options = {
                title: 'Robomarkt Omzet, in â‚¬',
                height: 600,
                bar: {
                    groupWidth: '80%'
                },
                trendlines: {
                    0: {type: 'polynomial', lineWidth: 12, opacity: .5}
                },
                colors: ['#526cb6'],
                hAxis: {
                    title: 'Datum',
                    format: 'MMM yy',
                    viewWindow: {
                        min: new Date(2018, 0),
                        max: new Date(2018, 11)
                    },
                    gridlines: {
                        count: 12
                    }
                },
                vAxis: {
                    title: 'Omzet (EUR)',
                    format: 'short',
                    gridlines: {
                        count: 10
                    }
                },
                explorer: {
                    maxZoomIn: 1,
                    axis: 'horizontal'
                },
                crosshair: {
                    trigger: 'both'
                }
            };

            function drawDaily(){
                var dailyResult = google.visualization.data.group(
                    data,
                    [{'column': 0, 'modifier': getDaily, 'type': 'date'}],
                    [{'column': 1, 'aggregation': google.visualization.data.sum, 'type': 'number'}]
                );

                function getDaily(x){
                    var day = x.getDate();
                    var month = x.getMonth();
                    var year = x.getFullYear();

                    return new Date(year, month, day);
                }

                options.hAxis.viewWindow.min = new Date(2018, 0, 1);
                options.hAxis.viewWindow.max = new Date(2018, 0, 14);
                options.hAxis.format = 'dd MMM yy';
                options.hAxis.gridlines.count = 14;

                chart.draw(dailyResult, options);                
            }

            function drawMonthly(){
                var monthlyResult = google.visualization.data.group(
                    data,
                    [{'column': 0, 'modifier': getMonthly, 'type': 'date'}],
                    [{'column': 1, 'aggregation': google.visualization.data.sum, 'type': 'number'}]
                );

                function getMonthly(x){
                    var month = x.getMonth();
                    var year = x.getFullYear();

                    return new Date(year, month);
                }

                options.hAxis.viewWindow.min = new Date(2018, 0);
                options.hAxis.viewWindow.max = new Date(2018, 11);
                options.hAxis.format = 'MMM yy';
                options.hAxis.gridlines.count = 12;

                chart.draw(monthlyResult, options);                
            }

            function drawAnnually(){
                var annuallyResult = google.visualization.data.group(
                    data,
                    [{'column': 0, 'modifier': getAnnually, 'type': 'date'}],
                    [{'column': 1, 'aggregation': google.visualization.data.sum, 'type': 'number'}]
                );

                function getAnnually(x){
                    var year = x.getFullYear();

                    return new Date(year, 0);
                }

                options.hAxis.viewWindow.min = new Date(2018, 0);
                options.hAxis.viewWindow.max = new Date(2028, 0);
                options.hAxis.format = 'yyyy';
                options.hAxis.gridlines.count = 10;

                chart.draw(annuallyResult, options);
            }

            function rebuildChart(){
                chart = new google.visualization.ColumnChart(document.getElementById('chart_revenue'));
            }

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.ColumnChart(document.getElementById('chart_revenue'));
            var daily_button = document.getElementById('daily_button');
            var monthly_button = document.getElementById('monthly_button');
            var annually_button = document.getElementById('annually_button');

            daily_button.onclick = function() { drawDaily(); rebuildChart(); }
            monthly_button.onclick = function() { drawMonthly(); rebuildChart(); }
            annually_button.onclick = function() { drawAnnually(); rebuildChart(); }

            drawMonthly();
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
        var data = new google.visualization.DataTable();

        data.addColumn('string', 'productnaam');
        data.addColumn('number', 'Aantal producten');

        @foreach(var product in Model){
                    <text>
                    data.addRows([["@product.Name", @product.Sold]]);
                    </text>
                }


        // Optional; add a title and set the width and height of the chart
        var options = {'title':'Top tien best verkochten producten', 'width':1200, 'height':600};

        // Display the chart inside the <div> element with id="piechart"
        var chart = new google.visualization.ColumnChart(document.getElementById('piechartproducten'));
        chart.draw(data, options);
        }
    </script>

        <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
        var data = new google.visualization.DataTable();

        data.addColumn('string', 'productnaam');
        data.addColumn('number', 'Aantal producten');

        @foreach(var product in Model.OrderBy(O => O.Amount)){
                    <text>
                    data.addRows([["@product.Name", @product.Amount]]);
                    </text>
                }


        // Optional; add a title and set the width and height of the chart
        var options = {'title':'Minst beschikbare producten', 'width':1200, 'height':600};

        // Display the chart inside the <div> element with id="piechart"
        var chart = new google.visualization.ColumnChart(document.getElementById('voorraadproducten'));
        chart.draw(data, options);
        }
    </script>
</head> 

<body>
    <div class="container">
        <h2>Grafieken</h2>
        <button id="daily_button">1d</button>
        <button id="monthly_button">1m</button>
        <button id="annually_button">1y</button>
        <div id="chart_revenue"></div>
        <div id="piechartproducten"></div>
        <div id="voorraadproducten"></div>
        
    </div>
</body>