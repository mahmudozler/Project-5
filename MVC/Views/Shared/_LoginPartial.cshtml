@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@using MVC.Extension
@using MVC.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (User.IsInRole("Admin")) { 
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" asp-area="" asp-controller="Manage" asp-action="Index" title="Manage" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Hallo @UserManager.GetUserName(User)!</a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" asp-controller="Manage" asp-action="Index">Beheer Account</a>
                        <hr>
                        <a class="dropdown-item" asp-controller="customers" asp-action="Index">Klanten</a>
                    </div>
                </li>
            } else {
                <li>
                    <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage" role="button">Hallo @UserManager.GetUserName(User)!</a>
                </li>
            }
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Uitloggen</button>
            </li>
            <li>
                @await Component.InvokeAsync("ShoppingCartSummary")
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Register">Registreer</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Inloggen</a></li>
        <li>
            @await Component.InvokeAsync("ShoppingCartSummary")
        </li>
	</ul>
}
